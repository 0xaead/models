@startuml

' Compound Protocol / Token Contracts
' https://github.com/compound-finance/compound-protocol/tree/v2.8.1/contracts

' https://plantuml.com/en/class-diagram
' https://plantuml-documentation.readthedocs.io/en/latest/formatting/all-skin-params.html
' https://plantuml-documentation.readthedocs.io/en/latest/formatting/all-skin-params.html#class
skinparam class {
  DefaultFontName Lucida Console
  ClassFontName "Lucida Console"
  ClassAttributeFontName Lucida Console
}

' self-contained borrowing and lending contracts

class CTokenStorage <<storage>> {
  -bool _notEntered
  .. ERC20 ..
  + string name
  + string symbol
  + uint8 decimals
  ..
  - uint borrowRateMaxMantissa
  - uint reserveFactorMaxMantissa
  ..
  + address admin
  + address pendingAdmin
  ..
  - uint initialExchangeRateMantissa
  + uint reserveFactorMantissa
  + uint accrualBlockNumber
  + uint borrowIndex
  + uint totalBorrows
  + uint totalReserves
  + uint totalSupply
  ..
  - mapping(address => uint) accountTokens
  - mapping(address => mapping (address => uint)) transferAllowances
}

class ComptrollerInterface

class InterestRateModel

CTokenStorage *-right- "comptroller" ComptrollerInterface
CTokenStorage *-right- InterestRateModel

Class BorrowSnapshot <<struct>> {
  uint principal
  uint interestIndex
}

CTokenStorage *-left- "0..*" BorrowSnapshot

class CTokenInterface extends CTokenStorage{
  + bool isCToken
  ---
  event AccrueInterest()
  event Mint()
  event Redeem()
  event Borrow()
  event RepayBorrow()
  event LiquidateBorrow()
  ..
  event NewPendingAdmin()
  event NewAdmin()
  ..
  event NewComptroller()
  event NewMarketInterestRateModel()
  event NewReserveFactor()
  event ReservesAdded()
  event ReservesReduced()
  event Transfer()
  event Approval()
  event Failure()
  ---
  + transfer(address dst, uint amount)
  + transferFrom(address src, address dst, uint amount)

}


@enduml