@startuml
 
' Python 3 Collections
' https://github.com/python/cpython/blob/v3.8.5/Lib/_collections_abc.py
 
' https://plantuml.com/class-diagram
' https://plantuml.com/sequence-diagram
' https://plantuml-documentation.readthedocs.io/en/latest/formatting/all-skin-params.html
' https://plantuml-documentation.readthedocs.io/en/latest/formatting/all-skin-params.html#class
 
skinparam {
  DefaultFontName Monaco
  'DefaultFontName Consolas
  'DefaultMonospacedFontName Consolas
  DefaultFontSize 14
  DefaultFontStyle bold
  BackgroundColor transparent
  BoxPadding 300
  PageMargin 10
  ArrowThickness 1
  MinClassWidth 75
  ClassFontStyle bold
  ParticipantPadding 20
}

skinparam Sequence{
  DividerBorderThickness 2
  LifeLineBorderThickness 2
  ParticipantBorderThicknessa 2
  ReferenceBorderThickness 2
}

skinparam Group{
  BorderThickness 1
  BorderShadowing false
}
 
hide Circle
hide Footbox
caption Simulate Rewards

Actor "Admin" as admin 
Participant "ProjectManager" as pm <<contract>>
Participant "Votes" as vts <<contract>>
Participant "Project" as prj <<contract>>
Participant "ProportionalRewardModel" as mdl <<contract>>

admin -> pm ++ : simulateRewardsArrayRetuns()
admin ++
  pm -> pm ++ : _simulateRewards()
    pm -> vts ++ : getVotesByProject()
    pm <-- vts --
    pm -> vts ++ : getScoresByProject()
    pm <-- vts --
    pm -> prj ++ : getRewardPot()
    pm <-- prj --
    pm -> mdl ++ : calcRewards()
      mdl -> mdl ++ : _calcVoteeRewards()
      mdl --
      mdl -> mdl ++ : _calcVoterRewards()
      mdl --
      loop 2 times
        mdl -> mdl ++ : _floor()
        mdl --
      end
      mdl -> mdl ++ : _calcRemainder()
    pm <-- mdl --
    mdl --
  pm --
pm --> admin --

...
    
@enduml